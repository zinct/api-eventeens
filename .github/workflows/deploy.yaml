name: ci

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  analyze:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17 for SonarCloud
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=zinct_api-eventeens
            -Dsonar.organization=indra-mahesa
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: build # Runs after the build job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21" # Specify your Go version

      - name: Run unit tests
        run: go test -v ./... # The -v flag provides verbose output

  deploy:
    runs-on: ubuntu-latest
    env:
      ARGOCD_SERVER: argocd.motionlaboratory.com
      ARGOCD_APP_NAME: api-eventeens
    needs: [build, analyze, test]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Update image with latest tags
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app set ${{ env.ARGOCD_APP_NAME }} --project api-eventeens-project --helm-set image.tag=${{ github.ref_name }}
          options: --auth-token=${{ secrets.ARGOCD_TOKEN_AWS }} --server=${{ env.ARGOCD_SERVER }}
      - name: Argo CD Action Sync
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app sync ${{ env.ARGOCD_APP_NAME }} --project api-eventeens-project
          options: --auth-token=${{ secrets.ARGOCD_TOKEN_AWS }} --server=${{ env.ARGOCD_SERVER }}
      - name: Argo CD Action Wait Healthy
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app wait ${{ env.ARGOCD_APP_NAME }} --grpc-web --health
          options: --auth-token=${{ secrets.ARGOCD_TOKEN_AWS }} --server=${{ env.ARGOCD_SERVER }}
