name: ci

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.ref_name }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run tests
        run: go test ./...

  deploy:
    runs-on: ubuntu-latest
    env:
      ARGOCD_SERVER: argocd.motionlaboratory.com
      ARGOCD_APP_NAME: api-eventeens
    needs: [build]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Update image with latest tags
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app set ${{ env.ARGOCD_APP_NAME }} --project api-eventeens-project --helm-set image.tag=${{ github.ref_name }}
          options: --auth-token=${{ secrets.ARGOCD_TOKEN_AWS }} --server=${{ env.ARGOCD_SERVER }}
      - name: Argo CD Action Sync
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app sync ${{ env.ARGOCD_APP_NAME }} --project api-eventeens-project
          options: --auth-token=${{ secrets.ARGOCD_TOKEN_AWS }} --server=${{ env.ARGOCD_SERVER }}
      - name: Argo CD Action Wait Healthy
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app wait ${{ env.ARGOCD_APP_NAME }} --grpc-web --health
          options: --auth-token=${{ secrets.ARGOCD_TOKEN_AWS }} --server=${{ env.ARGOCD_SERVER }}
